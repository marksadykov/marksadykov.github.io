{"version":3,"sources":["pages/Comparison/components/columns.js","pages/Comparison/components/choseBlock.js","pages/Comparison/components/blockCompare.js","pages/Comparison/Comparison.js","pages/Home/components/threats.js","pages/History/components/blockTrend.js","pages/History/History.js","utils/apiService.js","pages/Home/components/chart.js","pages/Home/components/mapChart.js","pages/Home/components/pieChart.js","pages/Home/components/today.js","pages/Home/components/content.js","pages/Home/Home.js","history.js","shared/components/info.js","shared/components/header.js","shared/components/leftBar.js","shared/PageBase.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","table","marginTop","Chart","props","classes","data","name","people","coutryData","total_cases","total_recovered","componentRef","useRef","width","myRef","getDimensions","current","offsetWidth","height","offsetHeight","useState","dimensions","setDimensions","useEffect","handleResize","window","addEventListener","removeEventListener","useContainerDimensions","ref","strokeDasharray","key","ourid","margin","top","right","left","bottom","dataKey","stackId","fill","color","TableContainer","className","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","total_deaths","total_new_deaths_today","total_new_cases_today","total_active_cases","total_serious_cases","graph","fontSize","Choose","title","setData","nameOfCounties","setNameOfCounties","value","setValue","setCurrent","axios","get","then","result","countries","countryitems","hasOwnProperty","push","finally","map","option","slice","style","Autocomplete","id","freeSolo","options","onChange","event","newValue","inputValue","getOptionLabel","renderInput","params","TextField","label","variant","choosing","display","justifyContent","container","marginBottom","BlockCompare","Card","CardContent","Typography","Comparison","ChartComponent","currentData","daysData","useMemo","series","type","axes","primary","position","stacked","tooltip","paper","paperGraph","BlockTrend","buffer","dataTotalCases","totalRecoveries","dataDeaths","flag","timelineitems","total_recoveries","History","getCountryStatistics","a","fetch","response","json","countriesRawData","countriesDataMap","stat","Object","values","data_category","data_value","chart_type","MapChart","state","tooltipLabel","countriesData","this","allCountriesValues","countryData","maxValue","Math","max","minValue","min","colorScale","scaleLinear","domain","range","data-tip","projectionConfig","scale","translateExtent","stroke","geography","geographies","geo","find","country","countryCode","properties","ISO_A2","rsmKey","onMouseEnter","num","NAME","newTooltipLabel","round","setState","onMouseLeave","default","outline","strokeWidth","transition","hover","pressed","React","Component","defaultProps","MyPieChart","dataEntry","labelStyle","Today","padding","spacing","Content","casesData","setCasesData","newCasesData","countryRawData","code","Home","createBrowserHistory","DialogTitle","withStyles","root","closeButton","palette","grey","children","onClose","other","disableTypography","IconButton","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","infoButton","border","CustomizedDialogs","open","setOpen","handleClose","Button","Dialog","aria-labelledby","dividers","gutterBottom","autoFocus","paddingTop","paddingBottom","flex","textAlign","textTransform","link","textDecoration","Header","AppBar","appBar","to","LeftBar","List","ListItem","button","NavLink","ListItemText","marginLeft","marginRight","content","menu","block","PageBase","App","history","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71ff478f.chunk.js","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useRef, useState} from \"react\";\n\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from \"recharts\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        marginTop: \"30px\"\n    },\n}));\n\n\nexport const useContainerDimensions = myRef => {\n    const getDimensions = () => ({\n        width: myRef.current.offsetWidth,\n        height: myRef.current.offsetHeight\n    })\n\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\n\n    useEffect(() => {\n        const handleResize = () => {\n            setDimensions(getDimensions())\n        }\n\n        if (myRef.current) {\n            setDimensions(getDimensions())\n        }\n\n        window.addEventListener(\"resize\", handleResize)\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize)\n        }\n    }, [myRef])\n\n    return dimensions;\n};\n\nexport default function Chart(props) {\n    const classes = useStyles();\n\n    Chart.propTypes = {\n        coutryData: PropTypes.object,\n        color: PropTypes.string\n    };\n\n    const data = [\n        {\n            name: \"Случаи\",\n            people: props.coutryData.total_cases,\n        },\n        {\n            name: \"Выздоровления\",\n            people: props.coutryData.total_recovered\n        },\n    ];\n\n    const componentRef = useRef()\n    const { width } = useContainerDimensions(componentRef);\n\n    return (\n        <div ref={componentRef}>\n            <BarChart strokeDasharray=\"3 3\"\n                key={props.coutryData.ourid}\n                width={width}\n                height={300}\n                data={data}\n                margin={{\n                    top: 20, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"people\" stackId=\"a\" fill={props.color} />\n            </BarChart>\n\n            <TableContainer className={classes.table} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Смерти</TableCell>\n                            <TableCell align=\"center\">Смерти сегодня</TableCell>\n                            <TableCell align=\"center\">Случаи сегодня</TableCell>\n                            <TableCell align=\"center\">Актуальные случаи</TableCell>\n                            <TableCell align=\"center\">Серьезные случаи</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell align=\"center\">{props.coutryData.total_deaths}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_new_deaths_today}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_new_cases_today}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_active_cases}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_serious_cases}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n        </div>\n    );\n}","import TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Columns from \"./columns\";\n\nconst useStyles = makeStyles((theme) => ({\n    graph: {\n        fontSize: \"5px\",\n        color: \"#f00\",\n    },\n}));\n\nexport default function Choose(props) {\n\n    Choose.propTypes = {\n        color: PropTypes.string\n    };\n\n    const classes = useStyles();\n\n    const [data, setData] = useState([{title: \"Загрузка\"}]);\n    const [nameOfCounties, setNameOfCounties] = useState([\"Загрузка\"]);\n\n    const [value, setValue] = useState({title: \"Russia\"});\n\n    const [current, setCurrent] = useState({\n        \"ourid\":191,\n        \"title\":\"Russia\",\n        \"total_cases\": 917884,\n        \"total_deaths\": 15617,\n        \"total_new_cases_today\": 5061,\n        \"total_new_deaths_today\": 119,\n        \"total_recovered\": 729411,\n        \"total_active_cases\": 6447,\n        \"total_serious_cases\": 172856\n    });\n\n    useEffect(() => {\n        axios.get(\"https://api.thevirustracker.com/free-api?countryTotals=ALL\")\n            .then(result => {\n\n                const countries = [];\n                for (const key in result.data.countryitems[0]) {\n                    if (result.data.countryitems[0].hasOwnProperty(key)) {\n                        countries.push(result.data.countryitems[0][key]);\n                    }\n                }\n                setData(countries);\n            }).finally(() => {\n\n            });\n    }, []);\n\n    useEffect(() => {\n        const current = data.map((option) => option.title).slice(0, 181);\n        setNameOfCounties(current);\n    }, [data]);\n\n    useEffect(() => {\n        for (const key in data) {\n            if (data.hasOwnProperty(key))  {\n                if (data[key].title === value.title)\n                    setCurrent(data[key]);\n            }\n        }\n    }, [value, data]);\n\n    return (\n        <div style={{ width: \"48%\" }}>\n            <Autocomplete\n                id=\"free-solo-demo\"\n                freeSolo\n                options={nameOfCounties}\n                value={value}\n                onChange={(event, newValue) => {\n                    if (typeof newValue === \"string\") {\n                        setValue({\n                            title: newValue,\n                        });\n                    } else if (newValue && newValue.inputValue) {\n                        // Create a new value from the user input\n                        setValue({\n                            title: newValue.inputValue,\n                        });\n                    } else {\n                        setValue({title: \"Russia\"});\n                    }\n                }}\n\n                getOptionLabel={(option) => {\n                    if (typeof option === \"string\") {\n                        return option;\n                    }\n                    if (option.inputValue) {\n                        return option.inputValue;\n                    }\n                    return option.title;\n                }}\n\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Выбор страны\" margin=\"normal\" variant=\"outlined\" />\n                )}\n            />\n\n            <Columns color={props.color} className={classes.graph} coutryData={current}/>\n        </div>\n    );\n}","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Choose from \"./choseBlock\";\n\nconst useStyles = makeStyles((theme) => ({\n    choosing: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    container: {\n        marginBottom: \"30px\"\n    },\n}));\n\nexport default function BlockCompare() {\n    const classes = useStyles();\n    return (\n        <Card variant=\"outlined\" className={classes.container}>\n            <CardContent>\n                <Typography>Сравнение</Typography>\n            </CardContent>\n            <CardContent className={classes.choosing}>\n                <Choose color={\"#51d0de\"}/>\n                <Choose color={\"#791e94\"}/>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport BlockCompare from \"./components/blockCompare\";\n\nexport default function Comparison() {\n    return (\n        <BlockCompare />\n    );\n}\n","import PropTypes from \"prop-types\";\nimport React, {useMemo} from \"react\"\n\nimport { Chart } from \"react-charts\"\n\nexport default function ChartComponent (props) {\n\n    ChartComponent.propTypes = {\n        daysData: PropTypes.array\n    };\n\n    let currentData = [[0, 0],[0, 0],[0, 0]];\n    if (props.daysData){\n        currentData = props.daysData;\n    }\n\n    const data = useMemo(\n        () => [\n            {\n                label: \"Выздоравления\",\n                data: currentData[1]\n            },\n            {\n                label: \"Смерти\",\n                data: currentData[2]\n            },\n            {\n                label: \"Заражения\",\n                data: currentData[0]\n            }\n        ],\n        [currentData]\n    )\n\n    const series = useMemo(\n        () => ({\n            type: \"bar\"\n        }),\n        []\n    )\n\n    const axes = useMemo(\n        () => [\n            { primary: true, type: \"ordinal\", position: \"left\" },\n            { position: \"bottom\", type: \"linear\", stacked: true, color: \"white\"}\n        ],\n        []\n    )\n\n    return (\n        <div\n            style={{\n                width: \"100%\",\n                height: \"100%\",\n            }}\n        >\n            <Chart key={props.daysData}\n                data={data} series={series} axes={axes} tooltip />\n        </div>\n    )\n}","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Theats from \"../../Home/components/threats\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginBottom: \"30px\",\n    },\n    paperGraph: {\n        height: \"500px\",\n    },\n}));\n\nexport default function BlockTrend() {\n    const classes = useStyles();\n\n    const [data, setData] = useState([[0, 0],[0, 0],[0, 0]]);\n\n    useEffect(() => {\n        axios.get(\"https://api.thevirustracker.com/free-api?countryTimeline=RU\")\n            .then(result => {\n                const buffer = [];\n\n                const dataTotalCases = [];\n                const totalRecoveries = [];\n                const dataDeaths = [];\n\n                let flag = false;\n                for (const key in result.data.timelineitems[0]) {\n                    if (result.data.timelineitems[0].hasOwnProperty(key)) {\n                        if (key === \"9/01/20\") flag = true;\n\n                        if (flag && key !== \"stat\") {\n                            const current = result.data.timelineitems[0][key];\n\n                            dataTotalCases.push([key, current.total_cases]);\n                            totalRecoveries.push([key, current.total_recoveries]);\n                            dataDeaths.push([key, current.total_deaths]);\n                        }\n                    }\n                }\n                buffer.push(dataTotalCases, totalRecoveries, dataDeaths);\n                setData(buffer);\n            }).finally(() => {\n\n            });\n    }, []);\n\n    return (\n        <Card className={classes.paper} variant=\"outlined\">\n            <CardContent>\n                <Typography>История распространения в Росии</Typography>\n            </CardContent>\n            <CardContent className={classes.paperGraph}>\n                <Theats key={data} daysData={data} />\n            </CardContent>\n        </Card>\n    );\n}","import React from \"react\";\n\nimport BlockTrend from \"./components/blockTrend\";\n\nexport default function History() {\n    return (\n        <BlockTrend />\n    );\n}\n","export const getCountryStatistics = async () => {\n    const response = await fetch(\"https://api.thevirustracker.com/free-api?countryTotals=ALL\");\n    const countriesRawData = await response.json();\n\n    const countriesDataMap = countriesRawData.countryitems[0];\n    delete countriesDataMap.stat;\n\n    return Object.values(countriesDataMap);\n};\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {ChartComponent} from \"bar-chart-simple\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        marginTop: \"30px\"\n    },\n}));\n\nexport default function Chart(props) {\n    const classes = useStyles();\n\n    Chart.propTypes = {\n        coutryData: PropTypes.object,\n        color: PropTypes.string\n    };\n\n    const data = [\n        {\n            data_category: \"Случаи\",\n            data_value: props.coutryData.total_cases,\n        },\n        {\n            data_category: \"Позитив\",\n            data_value: props.coutryData.total_recovered,\n        }\n    ];\n\n    return (\n        <div>\n            <ChartComponent\n                key={props.coutryData.ourid}\n                data={data}\n                chart_type=\"bar_chart\" />\n\n            <TableContainer className={classes.table} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Смерти</TableCell>\n                            <TableCell align=\"center\">Смерти сегодня</TableCell>\n                            <TableCell align=\"center\">Случаи сегодня</TableCell>\n                            <TableCell align=\"center\">Актуальные случаи</TableCell>\n                            <TableCell align=\"center\">Серьезные случаи</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell align=\"center\">{props.coutryData.total_deaths}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_new_deaths_today}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_new_cases_today}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_active_cases}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_serious_cases}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}","import {scaleLinear} from \"d3-scale\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n    ComposableMap,\n    Sphere,\n    Graticule,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst geoUrl =\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = (num) => {\n    if (num > 1e9) {\n        return Math.round(num / 1e8) / 10 + \"Bn\";\n    }\n    if (num > 1e6) {\n        return Math.round(num / 1e5) / 10 + \"M\";\n    }\n    if (num > 100) {\n        return Math.round(num / 100) / 10 + \"K\";\n    }\n    return num;\n};\n\nexport default class MapChart extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {tooltipLabel: \"\"}\n    }\n\n    static propTypes = {\n        countriesData: PropTypes.arrayOf(PropTypes.shape({\n            countryCode: PropTypes.string.isRequired,\n            value: PropTypes.number.isRequired,\n        })),\n        tooltipLabel: PropTypes.string\n    }\n\n    static defaultProps = {\n        countriesData: [],\n        tooltipLabel: \"\"\n    }\n\n    render() {\n        const countriesData = this.props.countriesData;\n\n        const allCountriesValues = countriesData.map(((countryData) => countryData.value));\n        const maxValue = Math.max(...allCountriesValues);\n        const minValue = Math.min(...allCountriesValues);\n\n        const colorScale = scaleLinear()\n            .domain([minValue, maxValue])\n            .range([\"#ffedea\", \"#ff5233\"]);\n\n        const height = 1200;\n        const width = 2400\n        const scale = 400;\n\n        return (\n            <>\n                <ComposableMap data-tip=\"\" width={width} height={height} projectionConfig={{scale: scale}}>\n                    <ZoomableGroup translateExtent={[[0, 0], [width, height]]}>\n                        <Sphere stroke=\"#DDD\"/>\n                        <Graticule stroke=\"#DDD\"/>\n                        <Geographies geography={geoUrl}>\n                            {({geographies}) =>\n                                geographies.map((geo) => {\n                                    const countryData = countriesData.find(\n                                        (country) => country.countryCode === geo.properties.ISO_A2\n                                    );\n\n                                    const color = countryData ? colorScale(countryData.value) : \"#D6D6DA\";\n\n                                    return <Geography\n                                        key={geo.rsmKey}\n                                        geography={geo}\n                                        onMouseEnter={() => {\n                                            const {NAME} = geo.properties;\n                                            const newTooltipLabel =\n                                                `${NAME} — ${countryData ? rounded(countryData.value) : \"N/A\"}`;\n                                            this.setState({tooltipLabel: newTooltipLabel})\n                                        }}\n                                        onMouseLeave={() => this.setState({tooltipLabel: \"\"})}\n                                        style={{\n                                            default: {\n                                                fill: color,\n                                                outline: \"none\",\n                                                stroke: \"#b1b1b1\",\n                                                strokeWidth: 0.5,\n                                                transition: \"500ms\",\n                                            },\n                                            hover: {\n                                                fill: \"#e4e4e4\",\n                                                outline: \"none\",\n                                                stroke: \"#b1b1b1\",\n                                                strokeWidth: 0.5,\n                                                transition: \"500ms\",\n                                            },\n                                            pressed: {\n                                                fill: \"#e4e4e4\",\n                                                outline: \"none\",\n                                            },\n                                        }}\n                                    />;\n                                })\n                            }\n                        </Geographies>\n                    </ZoomableGroup>\n                </ComposableMap>\n                <ReactTooltip>{this.state.tooltipLabel}</ReactTooltip>\n            </>\n        );\n    }\n};\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {PieChart} from \"react-minimal-pie-chart\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: \"300px\",\n    },\n    table: {\n        marginTop: \"30px\"\n    },\n}));\n\nexport default function MyPieChart(props) {\n    const classes = useStyles();\n\n    MyPieChart.propTypes = {\n        coutryData: PropTypes.object,\n    };\n\n    const data = [\n        {title: \"Выздоровевших\", value: props.coutryData.total_recovered, color: \"#51d0de\"},\n        {title: \"Серьезных случаев\", value: props.coutryData.total_serious_cases, color: \"#791e94\"},\n    ]\n\n    return (\n        <div>\n            <PieChart className={classes.container}\n                label={(data) => data.dataEntry.title}\n                labelStyle={{\n                    fontSize: \"4px\",\n                }}\n                key={props.coutryData.ourid}\n                data={data}\n            />\n            <TableContainer className={classes.table} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Выздоровевших</TableCell>\n                            <TableCell align=\"center\">Серьезных случаев</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell align=\"center\">{props.coutryData.total_recovered}</TableCell>\n                            <TableCell align=\"center\">{props.coutryData.total_serious_cases}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        marginTop: \"30px\"\n    },\n}));\n\nexport default function Today(props) {\n\n    const classes = useStyles();\n\n    Today.propTypes = {\n        coutryData: PropTypes.object,\n    };\n\n    return (\n        <TableContainer className={classes.table} component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Смерти сегодня</TableCell>\n                        <TableCell align=\"center\">Случаи сегодня</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell align=\"center\">{props.coutryData.total_new_deaths_today}</TableCell>\n                        <TableCell align=\"center\">{props.coutryData.total_new_cases_today}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport React, {useEffect, useState} from \"react\";\nimport {getCountryStatistics} from \"utils/apiService\";\nimport Chart from \"./chart\";\nimport MapChart from \"./mapChart\";\nimport PieChart from \"./pieChart\";\nimport Today from \"./today\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: \"30px\",\n    },\n    map: {\n        margin: \"0\",\n        padding: \"0 1.5rem\",\n    },\n}));\n\nexport default function Content() {\n    const classes = useStyles();\n    const [casesData, setCasesData] = useState([]);\n\n    useEffect(()=>{\n        (async () => {\n            const countriesRawData = await getCountryStatistics();\n            const newCasesData = Object.values(countriesRawData)\n                .map((countryRawData)=>{\n                    return {\n                        countryCode: countryRawData.code,\n                        value: countryRawData.total_new_cases_today,\n                    };\n                });\n            setCasesData(newCasesData);\n        })();\n    }, []);\n\n    const [data, setData] = useState([{title: \"Загрузка\"}]);\n    const [nameOfCounties, setNameOfCounties] = useState([\"Загрузка\"]);\n\n    const [value, setValue] = useState({title: \"Russia\"});\n\n    const [current, setCurrent] = useState({\n        \"ourid\":191,\n        \"title\":\"Russia\",\n        \"total_cases\": 917884,\n        \"total_deaths\": 15617,\n        \"total_new_cases_today\": 5061,\n        \"total_new_deaths_today\": 119,\n        \"total_recovered\": 729411,\n        \"total_active_cases\": 6447,\n        \"total_serious_cases\": 172856\n    });\n\n    useEffect(() => {\n        axios.get(\"https://api.thevirustracker.com/free-api?countryTotals=ALL\")\n            .then(result => {\n\n                const countries = [];\n                for (const key in result.data.countryitems[0]) {\n                    if (result.data.countryitems[0].hasOwnProperty(key)) {\n                        countries.push(result.data.countryitems[0][key]);\n                    }\n                }\n                setData(countries);\n            }).finally(() => {\n\n            });\n    }, []);\n\n    useEffect(() => {\n        const current = data.map((option) => option.title).slice(0, 181);\n        setNameOfCounties(current);\n    }, [data]);\n\n    useEffect(() => {\n        for (const key in data) {\n            if (data.hasOwnProperty(key))  {\n                if (data[key].title === value.title)\n                    setCurrent(data[key]);\n            }\n        }\n    }, [value, data]);\n\n    return (\n        <>\n            <Paper className={classes.paper}>\n                <Typography>Новые случаи в мире сегодня</Typography>\n                <MapChart countriesData={casesData} className={classes.map} />\n            </Paper>\n\n            <Paper className={classes.paper}>\n                <Autocomplete\n                    id=\"free-solo-demo\"\n                    freeSolo\n                    options={nameOfCounties}\n                    value={value}\n                    onChange={(event, newValue) => {\n                        if (typeof newValue === \"string\") {\n                            setValue({\n                                title: newValue,\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            // Create a new value from the user input\n                            setValue({\n                                title: newValue.inputValue,\n                            });\n                        } else {\n                            setValue({title: \"Russia\"});\n                        }\n                    }}\n\n                    getOptionLabel={(option) => {\n                        if (typeof option === \"string\") {\n                            return option;\n                        }\n                        if (option.inputValue) {\n                            return option.inputValue;\n                        }\n                        return option.title;\n                    }}\n\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Выбор страны\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                />\n            </Paper>\n\n            <Paper className={classes.paper}>\n                <Typography>Подробная статистика</Typography>\n                <Chart coutryData={current}/>\n            </Paper>\n\n            <Paper className={classes.paper}>\n                <Typography>Сегодня</Typography>\n                <Today coutryData={current}/>\n            </Paper>\n\n            <Paper className={classes.paper}>\n                <Typography>Соотношение</Typography>\n                <PieChart coutryData={current}/>\n            </Paper>\n        </>\n    );\n}","import React from \"react\";\nimport Content from \"./components/content\";\n\nexport default function Home() {\n    return (\n        <Content/>\n    );\n}\n","import {createBrowserHistory} from \"history\";\n\nexport default createBrowserHistory();\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles, makeStyles} from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\n\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const {children, classes, onClose, ...other} = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nconst useStyles = makeStyles((theme) => ({\n    infoButton: {\n        color: \"#fff\",\n        border: \"1px #fff solid\",\n    },\n}));\n\nexport default function CustomizedDialogs() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Button className={classes.infoButton} onClick={handleClickOpen}>\n                О приложении\n            </Button>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    О приложении\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n                        Команда: inFrontOfYou\n                    </Typography>\n                    <Typography gutterBottom>\n                        Курс: Frontend школа KTS\n                    </Typography>\n                    <Typography gutterBottom>\n                        Студенты: Александр Лебедев, Марк Садыков\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        ОК\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Info from \"./info\";\nimport \"./header.css\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    container: {\n        paddingTop: \"15px\",\n        paddingBottom: \"15px\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n    },\n\n    Typography: {\n        flex: 1,\n    },\n\n    title: {\n        textAlign: \"center\",\n        textTransform: \"uppercase\",\n    },\n\n    link: {\n        textDecoration: \"none\",\n        color: \"white\",\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    return (\n        <AppBar className={classes.appBar}>\n            <div className={classes.container}>\n                <div>\n                    <NavLink className={classes.link} to=\"/\">\n                        <Typography>inFrontOfYou</Typography>\n                    </NavLink>\n                </div>\n                <div className=\"menu-items\">\n                    <Typography className={classes.title}>Статистика пандемии коронавируса</Typography>\n                </div>\n                <div className=\"menu-items\">\n                    <Info />\n                </div>\n            </div>\n        </AppBar>\n    );\n}\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        textAlign: \"center\",\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nexport default function LeftBar() {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.paper}>\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                <ListItem button component={NavLink} to=\"\">\n                    <ListItemText primary=\"Общая статистика\"/>\n                </ListItem>\n                <ListItem button component={NavLink} to=\"compare\">\n                    <ListItemText primary=\"Сравнения\"/>\n                </ListItem>\n                <ListItem button component={NavLink} to=\"history\">\n                    <ListItemText primary=\"История распространения\"/>\n                </ListItem>\n            </List>\n        </Paper>\n    );\n}\n","import {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Header from \"./components/header\";\nimport LeftBar from \"./components/leftBar\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n    },\n    content: {\n        marginTop: \"30px\",\n    },\n    menu: {\n        width: \"100%\",\n        position: \"fixed\"\n    },\n    block: {\n        marginTop: \"80px\",\n    }\n}));\n\n\nfunction PageBase(props) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Header/>\n            <div className={classes.container}>\n                <div className={classes.block}>\n                    <LeftBar className={classes.menu} />\n                </div>\n                <div className={classes.content}>\n                    {props?.children}\n                </div>\n            </div>\n        </>\n    )\n}\n\nPageBase.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default PageBase;","import Comparison from \"pages/Comparison/Comparison\";\nimport History from \"pages/History/History\";\nimport Home from \"pages/Home/Home\";\nimport React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport {Router} from \"react-router-dom\";\nimport history from \"./history\";\nimport \"./App.css\";\nimport PageBase from \"./shared/PageBase\";\n\n\nconst App = () => (\n    <div className=\"App\">\n        <Router history={history}>\n            <PageBase>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/compare\" component={Comparison} />\n                    <Route exact path=\"/history\" component={History} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </PageBase>\n        </Router>\n    </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {\"Service-Worker\": \"script\"},\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}